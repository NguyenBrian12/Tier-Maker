{"version":3,"sources":["actions/index.js","App.js","serviceWorker.js","reducers/tierlist.js","reducers/index.js","index.js"],"names":["adding","item","type","payload","deleting","changingTier","App","React","useState","setItem","tierlist","useSelector","state","dispatch","useDispatch","list","sTier","aTier","bTier","cTier","dTier","fTier","benchTier","onDragOver","e","preventDefault","onDrop","tier","itemId","Number","dataTransfer","getData","items","filter","id","index","length","sort","a","b","map","push","key","className","draggable","onDragStart","setData","onClick","name","value","onChange","target","onKeyPress","keyCode","which","Boolean","window","location","hostname","match","initialState","tierlistReducer","action","concat","Math","random","allReducers","combineReducers","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.44ea6173.chunk.js","sourcesContent":["export const adding = (item) => {\r\n    return {\r\n        type: 'ADD',\r\n        payload: item\r\n    };\r\n}\r\n\r\nexport const deleting = (item) => {\r\n    return {\r\n        type: 'DELETE',\r\n        payload: item\r\n    };\r\n}\r\nexport const changingTier = (item) => {\r\n    return {\r\n        type: 'CHANGING_TIER',\r\n        payload: item\r\n    };\r\n}","import React from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {adding, deleting, changingTier} from \"./actions\";\nimport './css/App.css';\nfunction App() {\n  const [item, setItem] = React.useState(\"\");\n  const tierlist = useSelector(state => state.tierlist.tierlist);\n  const dispatch = useDispatch();\n  const list = {\n    sTier:[],\n    aTier:[],\n    bTier:[],\n    cTier:[],\n    dTier:[],\n    fTier:[],\n    benchTier:[]\n  }\n  const handleEnterPressed = (e) => {\n    var code = e.keyCode || e.which;\n    if (code === 13 && item){\n      e.preventDefault();\n      dispatch(adding(item));\n      setItem(\"\");\n    }\n  }\n  const handleSubmit = (e) => {\n    if(item){\n    e.preventDefault();\n    dispatch(adding(item));\n    setItem(\"\");\n    }\n  }\n\n  const onDragStart = (e, itemId) => {\n    e.dataTransfer.setData(\"item\", itemId);\n  }\n  const onDragOver = (e) => {\n    e.preventDefault();\n  }\n\tconst onDrop = (e, tier) => {\n    let itemId = Number(e.dataTransfer.getData(\"item\"));\n    let items = tierlist.filter((item)=> {\n      if(item.id === itemId){\n        item.tier = tier;\n        item.index = list[tier].length;\n      }\n      return item;\n    })\n    dispatch(changingTier(items));\n}\ntierlist.sort((a,b) => a.index - b.index).map((item) => {\n  list[item.tier].push(\n    <div key={item.id} className=\"draggable card\" draggable onDragStart={(e)=>onDragStart(e, item.id)}>\n      <div className=\"delete-container\">\n        <button className=\"delete-button\" onClick={() => dispatch(deleting(item.id))}>X</button>\n      </div>\n      <div className=\"item-container\">{item.name}</div>\n    </div>\n  )\n})\n\n\n  return (\n    <div className=\"App\">\n      <div className=\"title\">TierList Maker</div>\n      <div className=\"sub-title\">Rank your favorite things</div>\n      <div className=\"container\">\n        <div className=\"sTier tier-row-odd\" onDragOver={onDragOver} onDrop={(e) =>onDrop(e, \"sTier\")}>\n          <div className=\"tier\">S</div>\n          <div className=\"tier-list\">{list.sTier}</div>\n        </div>\n        <div className=\"aTier tier-row-even\" onDragOver={onDragOver} onDrop={(e) =>onDrop(e, \"aTier\")}>\n          <div className=\"tier\">A</div>\n          <div className=\"tier-list\">{list.aTier}</div>\n        </div>\n        <div className=\"bTier tier-row-odd\" onDragOver={onDragOver} onDrop={(e) =>onDrop(e, \"bTier\")}>\n          <div className=\"tier\">B</div>\n          <div className=\"tier-list\">{list.bTier}</div>\n        </div>\n        <div className=\"cTier tier-row-even\" onDragOver={onDragOver} onDrop={(e) =>onDrop(e, \"cTier\")}>\n          <div className=\"tier\">C</div>\n          <div className=\"tier-list\">{list.cTier}</div>\n        </div>\n        <div className=\"dTier tier-row-odd\" onDragOver={onDragOver} onDrop={(e) =>onDrop(e, \"dTier\")}>\n          <div className=\"tier\">D</div>\n          <div className=\"tier-list\">{list.dTier}</div>\n        </div>\n        <div className=\"fTier tier-row-even\" onDragOver={onDragOver} onDrop={(e) =>onDrop(e, \"fTier\")}>\n          <div className=\"tier\">F</div>\n          <div className=\"tier-list\">{list.fTier}</div>\n        </div>\n        <div className=\"benchTier tier-row-odd\" onDragOver={onDragOver} onDrop={(e) =>onDrop(e, \"benchTier\")}>\n          <div className=\"tier-bench\">Bench</div>\n          <div className=\"tier-list\">{list.benchTier}</div>\n        </div>\n      </div>\n      <div className=\"add-container\">\n        <input className=\"add-input\" value={item} onChange={e => setItem(e.target.value)} onKeyPress={handleEnterPressed}></input>\n        <button className=\"add-button\" onClick={handleSubmit}>Add</button>\n      </div>\n    </div>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\r\n    tierlist: []\r\n};\r\nconst tierlistReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case \"ADD\":\r\n            return {...state, tierlist: state.tierlist.concat({id:Math.random(), name:action.payload, tier:\"benchTier\", index: 0 })};\r\n        case \"DELETE\":\r\n            return {...state, tierlist: state.tierlist.filter( item => item.id !== action.payload)};\r\n        case \"CHANGING_TIER\":\r\n            return {...state, tierlist: state.tierlist.filter( item => item.tier !== action.payload, item => item.index !== action.payload)};\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default tierlistReducer;","import tierlistReducer from \"./tierlist\";\r\nimport {combineReducers} from \"redux\";\r\n\r\n\r\nconst allReducers = combineReducers({\r\n    tierlist: tierlistReducer\r\n})\r\n\r\nexport default allReducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore} from 'redux'\nimport allReducers from './reducers';\nimport {Provider} from 'react-redux';\nconst store = createStore(allReducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}